{"version":3,"file":"static/js/270.64551f25.chunk.js","mappings":"2QAEaA,EAAWC,EAAAA,GAAAA,KAAH,2CAIRC,EAAaD,EAAAA,GAAAA,KAAH,yCAIVE,EAAQF,EAAAA,GAAAA,GAAH,wGAOLG,EAASH,EAAAA,GAAAA,GAAH,oFAMNI,EAAUJ,EAAAA,GAAAA,EAAH,oFAMPK,EAAQL,EAAAA,GAAAA,GAAH,oFAKLM,EAAYN,EAAAA,GAAAA,EAAH,4HAOTO,EAAYP,EAAAA,GAAAA,IAAH,0GAOTQ,EAASR,EAAAA,GAAAA,EAAH,qGAONS,EAAaT,EAAAA,GAAAA,GAAH,mFAMVU,EAAMV,EAAAA,GAAAA,IAAH,kE,SCehB,EAxDqB,WACnB,OAAwBW,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAWC,EAAAA,EAAAA,MAAXD,QAERE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAWH,GACRI,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,IACbF,MAAK,SAAAG,GAAI,OAAIR,EAAQQ,EAAZ,GACb,GAAE,CAACP,IAEJ,IAAQQ,EAAiDV,EAAjDU,WAAYC,EAAqCX,EAArCW,eAAgBC,EAAqBZ,EAArBY,SAAUC,EAAWb,EAAXa,OAE9C,OACE,4BACE,SAACf,EAAD,CACEgB,IACEd,EAAKe,YAAL,kDAC+Cf,EAAKe,aAChD,qCAENC,IAAKhB,EAAKiB,QACVC,MAAM,OACNC,OAAO,UAET,SAACtB,EAAD,UAAac,KACb,UAACnB,EAAD,yBAAqBkB,MACrB,UAACf,EAAD,YACA,SAACF,EAAD,uBACc,KAAbmB,GAAkB,SAAClB,EAAD,yCAAmD,SAACA,EAAD,UAAYkB,QAGlF,UAAChB,EAAD,YACE,qCADF,IACuBiB,MAGvB,SAACtB,EAAD,sCAEA,UAACD,EAAD,YACE,yBACE,SAAC,KAAD,CAAM8B,GAAG,OAAT,UACE,SAACjC,EAAD,wBAGJ,yBACE,SAAC,KAAD,CAAMiC,GAAG,UAAT,UACE,SAAC/B,EAAD,8BAIN,SAAC,EAAAgC,SAAD,CAAUC,UAAU,wCAApB,UACE,SAAC,KAAD,QAIP,C,uJC1ED,IAAMC,EAAU,mCACVC,EAAW,gCAEJC,EAAa,WACtB,OAAOC,MAAM,GAAD,OAAIF,EAAJ,sCAA0CD,GACzD,EAEYI,EAAU,SAACC,GACpB,OAAOF,MAAM,GAAD,OAAIF,EAAJ,gCAAoCD,EAApC,qDAAwFK,GACvG,EAEYvB,EAAa,SAACH,GACvB,OAAOwB,MAAM,GAAD,OAAIF,EAAJ,iBAAqBtB,EAArB,oBAAuCqB,EAAvC,mBACf,EAEYM,EAAc,SAAC3B,GACxB,OAAOwB,MAAM,GAAD,OAAIF,EAAJ,iBAAqBtB,EAArB,4BAA+CqB,EAA/C,0BACf,EAEYO,EAAW,SAAC5B,GACrB,OAAOwB,MAAM,GAAD,OAAIF,EAAJ,iBAAqBtB,EAArB,4BAA+CqB,EAA/C,mBACf,C","sources":["components/pages/movieDetails.styled.js","components/pages/MovieDetails.jsx","components/services/getMovies.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const CastWord = styled.span`\nfont-size:30px;\n\n`\nexport const ReviewWord = styled.span`\nfont-size:30px;\n`\n\nexport const UlAdd = styled.ul`\ndisplay: flex;\njustify-content: center;\nlist-style: none;\ncolumn-gap: 30px;\n`\n\nexport const AddInd = styled.h4`\nfont-size: 30px;\ndisplay: flex;\njustify-content: center;\n`\n\nexport const Popular = styled.p`\nfont-size: 30px;\ndisplay: flex;\njustify-content: center;\n`\n\nexport const Overw = styled.h3`\nfont-size: 30px;\ndisplay: flex;\njustify-content: center;\n`\nexport const UnderOver = styled.p`\nfont-size: 20px;\njustify-content: center;\ndisplay: flex;\nflex-wrap: wrap;\nalign-items: center;\n`\nexport const Container = styled.div`\ndisplay: flex;\nheight: auto;\njustify-content: center;\nflex-direction: column;\n`\n\nexport const Status = styled.p`\nfont-size: 30px;\njustify-content: center;\ndisplay: flex;\nmargin: 55px 0;\n`\n\nexport const OriginName = styled.h2`\ndisplay: flex;\njustify-content: center;\nmargin: 60px 0;\n`\n\nexport const Img = styled.img`\ndisplay: flex;\njustify-content: center;\n` ","import { useParams } from 'react-router-dom';\nimport { SearchById } from 'components/services/getMovies';\nimport { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Outlet } from 'react-router-dom';\nimport { Suspense } from 'react';\nimport {\n  CastWord,\n  ReviewWord,\n  UlAdd,\n  AddInd,\n  Popular,\n  Overw,\n  UnderOver,\n  Container,\n  Status,\n  OriginName,\n  Img,\n} from './movieDetails.styled';\n\nconst MovieDetails = () => {\n  const [info, setInfo] = useState('');\n  const { moveid } = useParams();\n\n  useEffect(() => {\n    SearchById(moveid)\n      .then(response => response.json())\n      .then(data => setInfo(data));\n  }, [moveid]);\n\n  const { popularity, original_title, overview, status } = info;\n\n  return (\n    <div>\n      <Img\n        src={\n          info.poster_path\n            ? `https://www.themoviedb.org/t/p/original/${info.poster_path}`\n            : 'https://i.ibb.co/FB037FW/image.jpg'\n        }\n        alt={info.tagline}\n        width=\"1000\"\n        height=\"1000\"\n      />\n      <OriginName>{original_title}</OriginName>\n      <Popular>Popularity:{popularity}</Popular>\n      <Container>\n      <Overw>Overview</Overw>\n      {overview === '' ? <UnderOver>sorry,but overview empty </UnderOver> : <UnderOver>{overview}</UnderOver>}\n      </Container>\n      \n      <Status>\n        <span>Status</span>:{status}\n      </Status>\n\n      <AddInd>Adittional information</AddInd>\n\n      <UlAdd>\n        <li>\n          <Link to=\"cast\">\n            <CastWord>Cast</CastWord>\n          </Link>\n        </li>\n        <li>\n          <Link to=\"reviews\">\n            <ReviewWord>Reviews</ReviewWord>\n          </Link>\n        </li>\n      </UlAdd>\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n};\n\nexport default MovieDetails;\n","const API_KEY = \"450e11a88d577b3ba488dedff52e79a6\"\nconst BASE_URL = \"https://api.themoviedb.org/3/\"\n\nexport const getMovies  = () => {\n    return fetch(`${BASE_URL}trending/movie/day?api_key=${API_KEY}`)\n}\n\nexport const SearchM = (searchText) => {\n    return fetch(`${BASE_URL}search/movie?api_key=${API_KEY}&language=en-US&include_adult=false&query=${searchText}`)\n}\n\nexport const SearchById = (moveid) => {\n    return fetch(`${BASE_URL}movie/${moveid}?api_key=${API_KEY}&language=en-US`)\n}\n\nexport const ReviewsById = (moveid) => {\n    return fetch(`${BASE_URL}movie/${moveid}/reviews?api_key=${API_KEY}&language=en-US&page=1`)\n}\n\nexport const CastById = (moveid) => {\n    return fetch(`${BASE_URL}movie/${moveid}/credits?api_key=${API_KEY}&language=en-US`)\n}"],"names":["CastWord","styled","ReviewWord","UlAdd","AddInd","Popular","Overw","UnderOver","Container","Status","OriginName","Img","useState","info","setInfo","moveid","useParams","useEffect","SearchById","then","response","json","data","popularity","original_title","overview","status","src","poster_path","alt","tagline","width","height","to","Suspense","fallback","API_KEY","BASE_URL","getMovies","fetch","SearchM","searchText","ReviewsById","CastById"],"sourceRoot":""}